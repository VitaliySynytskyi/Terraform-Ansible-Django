# all servers
- name: Update repositories
  apt:
    update_cache: yes
    upgrade: dist
    state: latest

# private server with db
- name: Install apt-transport-https
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - lsb-release
      - gnupg
    state: latest
  when: "'private' in group_names"

- name: Add signing key
  apt_key:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    state: present
  when: "'private' in group_names"
- name: Add repository into sources list
  apt_repository:
    repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
  when: "'private' in group_names"

- name: Install Docker
  apt:
    name:
      - docker
      - docker.io
      - docker-compose
      - docker-registry
    state: latest
    update_cache: true
  when: "'private' in group_names"

- name: Start Docker container with Postgres
  docker_container:
    name: postgres
    image: postgres
    restart_policy: always
    env:
      POSTGRES_USER: "db"
      POSTGRES_PASSWORD: "db"
      POSTGRES_DB: "db"
    ports:
      - "5432:5432"
  when: "'private' in group_names"

# public server with app
- name: Install required packages
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - python3-dev
    - python3-pip
    - python3-virtualenv
    - libpq-dev
    - postgresql
    - postgresql-contrib
    - nginx
    - curl
  when: "'public' in group_names"

- name: Dowloading django project from github
  git:
    repo: https://github.com/digitalocean/sample-django.git
    dest: /home/ubuntu/sample-django
    version: main
  when: "'public' in group_names"

- name: Installing requirements
  pip:
    requirements: /home/ubuntu/sample-django/requirements.txt
    state: present
  when: "'public' in group_names"

- name: Copy nginx configuration file
  template:
    src: nginx.conf.j2
    dest: "/etc/nginx/sites-available/default"
  when: "'public' in group_names"

- name: Reload nginx
  service:
    name: nginx
    state: reloaded
  when: "'public' in group_names"
